============
-- IMAGES --
============

```
    // Base main image class
    use dezero\base\Image;
```

--------------------------------------------
-- 1. INFO
--------------------------------------------
```
    // Testing with a FILE
    // '/Users/fabian/www/dezero.demo/www/files/images/test.png'
    // ------------------------------------------

    d("----------- TESTS WITH FILE '@www/files/images/test.png' -----------");

    $image_png = Image::load('@www/files/images/test.png');
    d($image_png->realPath());
    d($image_png->getWidth());
    d($image_png->getHeight());
    d($image_png->size());
    d($image_png->formatSize());
    d($image_jpg->mime());

 ```


--------------------------------------------
-- 2. IMAGE RESIZES
--------------------------------------------
```
    // Testing with a FILE
    // '/Users/fabian/www/dezero.demo/www/files/images/test.png'
    // ------------------------------------------

    d("----------- TESTS WITH FILE '@www/files/images/test.png' -----------");

    $image_png = Image::load('@www/files/images/test.png');

    d("----------- RESIZING to 200x100 -----------");
    $image_png->resize(200,100)->save('test-new.png');
    // $image_png->resizeFill(200,100)->save('test-new.png');
    // $image_png->resizeForce(200,100)->save('test-new.png');
    // $image_png->resizeCrop(200,100)->save('test-new.png');
    $resized_image = Image::load('@www/files/images/test-new.png');
    d($resized_image->realPath());
    d($resized_image->getWidth());
    d($resized_image->getHeight());

 ```



--------------------------------------------
-- 3. IMAGE CONVERSIONS
--------------------------------------------
```
    // Testing with a FILE
    // '/Users/fabian/www/dezero.demo/www/files/images/test.png'
    // ------------------------------------------

    d("----------- TESTS WITH FILE '@www/files/images/test.png' -----------");

    $image_png = Image::load('@www/files/images/test.png');

    d("----------- CHANGING IMAGE FORMAT -----------");
    $image_png->format('jpg')->save('test.jpg');
    $image_jpg = Image::load('@www/files/images/test.jpg');
    d($image_jpg->mime());
    d($image_jpg->realPath());
    d($image_jpg->getWidth());
    d($image_jpg->getHeight());
    d($image_jpg->mime());

 ```



--------------------------------------------
-- 4. IMAGE OPTIMIZERS
--------------------------------------------
```
    ("----------- OPTIMIZING IMAGE -----------");
    d($image_png->formatSize());
    $image_png->optimize()->save('test-optimized.png');

    // Load optimized image
    $optimized_png = Image::load('@www/files/images/test-optimized.png');
    d($optimized_png->formatSize());

    d($image_jpg->formatSize());
    $image_jpg->optimize()->save('test-optimized.jpg');
    $optimized_jpg = Image::load('@www/files/images/test-optimized.png');
    d($optimized_jpg->formatSize());

 ```

--------------------------------------------
-- 5. PRESET IMAGES
--------------------------------------------
- The preset images are defined on /app/config/components/images.php

- You can defined a preset like this:
```
    ...
    'presets' => [
        'medium' => [
            'name'          => 'MEDIUM image size - 512x288 (prefix "A_")',
            'prefix'        => 'A_',
            'width'         => 512,
            'height'        => 288,
            'resize_method' => 'crop',      // You can use 'max' (default), 'contain', 'fill', 'fill-max', 'stretch', 'crop'
            'is_optimize'   => false,
            'is_upscale'    => false
        ],
    ],
    ...
```

- Finally, you can generate a preset image via AssetImage::generatePreset() method. For example:
```
    $asset_image_model = AssetImage::findOne(1);
    $asset_image_model->generatePreset('medium');
```
This preset image will be saved on a subdirectory "_" and the file will be saved with the prefix "A_" and the size 512x288.
