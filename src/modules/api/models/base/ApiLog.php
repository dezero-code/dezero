<?php
/**
 * Base ApiLog model class file
 *
 * @author Fabián Ruiz <fabian@dezero.es>
 * @link http://www.dezero.es
 * @copyright Copyright &copy; 2023 Fabián Ruiz
 */

namespace dezero\modules\api\models\base;

use dezero\modules\api\models\query\ApiLogQuery;
use yii\db\ActiveQueryInterface;
use Yii;

/**
 * DO NOT MODIFY THIS FILE! It is automatically generated by Gii.
 * If any changes are necessary, you must set or override the required
 * property or method in class "dezero\modules\api\models\ApiLog".
 *
 * Base ApiLog model class for table "api_log".
 *
 * -------------------------------------------------------------------------
 * COLUMN ATTRIBUTES
 * -------------------------------------------------------------------------
 * @property int $api_log_id
 * @property string $api_type
 * @property string $api_name
 * @property string $request_type
 * @property string $request_url
 * @property string $request_endpoint
 * @property string $request_input_json
 * @property string $request_hostname
 * @property int $response_http_code
 * @property string $response_json
 * @property string $entity_uuid
 * @property string $entity_type
 * @property int $entity_source_id
 * @property int $created_date
 * @property int $created_user_id
 *
 * -------------------------------------------------------------------------
 * RELATIONS
 * -------------------------------------------------------------------------
 * @property User $createdUser
 * @property Entity $entityUu
 */
abstract class ApiLog extends \dezero\db\ActiveRecord
{
    public const API_TYPE_CLIENT = 'client';
    public const API_TYPE_SERVER = 'server';
    public const REQUEST_TYPE_GET = 'GET';
    public const REQUEST_TYPE_POST = 'POST';
    public const REQUEST_TYPE_PUT = 'PUT';
    public const REQUEST_TYPE_DELETE = 'DELETE';


    /**
     * {@inheritdoc}
     */
    public static function tableName() : string
    {
        return 'api_log';
    }


    /**
     * {@inheritdoc}
     */
    public function rules() : array
    {
        return [
            // Typed rules
            'requiredFields' => [['request_url', 'request_endpoint'], 'required'],
            'integerFields' => [['response_http_code', 'entity_source_id', 'created_date', 'created_user_id'], 'integer'],
            'stringFields' => [['request_input_json', 'response_json'], 'string'],
            
            // Max length rules
            'max32' => [['api_name'], 'string', 'max' => 32],
            'max36' => [['entity_uuid'], 'string', 'max' => 36],
            'max128' => [['request_endpoint', 'request_hostname', 'entity_type'], 'string', 'max' => 128],
            'max512' => [['request_url'], 'string', 'max' => 512],
            
            // ENUM rules
            'apiTypeList' => ['api_type', 'in', 'range' => [
                    self::API_TYPE_CLIENT,
                    self::API_TYPE_SERVER,
                ]
            ],
            'requestTypeList' => ['request_type', 'in', 'range' => [
                    self::REQUEST_TYPE_GET,
                    self::REQUEST_TYPE_POST,
                    self::REQUEST_TYPE_PUT,
                    self::REQUEST_TYPE_DELETE,
                ]
            ],
            
            // Default NULL
            'defaultNull' => [['request_input_json', 'request_hostname', 'response_json', 'entity_uuid', 'entity_type', 'entity_source_id'], 'default', 'value' => null],
        ];
    }


   /*
    |--------------------------------------------------------------------------
    | RELATIONS
    |--------------------------------------------------------------------------
    */

    /**
     * @return ActiveQueryInterface The relational query object.
     */
    public function getCreatedUser() : ActiveQueryInterface
    {
        return $this->hasOne(User::class, ['user_id' => 'created_user_id']);
    }


    /**
     * @return ActiveQueryInterface The relational query object.
     */
    public function getEntityUu() : ActiveQueryInterface
    {
        return $this->hasOne(Entity::class, ['entity_uuid' => 'entity_uuid']);
    }


   /*
    |--------------------------------------------------------------------------
    | ENUM LABELS
    |--------------------------------------------------------------------------
    */

    /**
     * Get "api_type" labels
     */
    public function api_type_labels() : array
    {
        return [
            self::API_TYPE_CLIENT => Yii::t('backend', 'Client'),
            self::API_TYPE_SERVER => Yii::t('backend', 'Server'),
        ];
    }


    /**
     * Get "api_type" specific label
     */
    public function api_type_label(?string $api_type = null) : string
    {
        $api_type = ( $api_type === null ) ? $this->api_type : $api_type;
        $vec_labels = $this->api_type_labels();

        return isset($vec_labels[$api_type]) ? $vec_labels[$api_type] : '';
    }

   /*
    |--------------------------------------------------------------------------
    | ENUM LABELS
    |--------------------------------------------------------------------------
    */

    /**
     * Get "request_type" labels
     */
    public function request_type_labels() : array
    {
        return [
            self::REQUEST_TYPE_GET => Yii::t('backend', 'Get'),
            self::REQUEST_TYPE_POST => Yii::t('backend', 'Post'),
            self::REQUEST_TYPE_PUT => Yii::t('backend', 'Put'),
            self::REQUEST_TYPE_DELETE => Yii::t('backend', 'Delete'),
        ];
    }


    /**
     * Get "request_type" specific label
     */
    public function request_type_label(?string $request_type = null) : string
    {
        $request_type = ( $request_type === null ) ? $this->request_type : $request_type;
        $vec_labels = $this->request_type_labels();

        return isset($vec_labels[$request_type]) ? $vec_labels[$request_type] : '';
    }



    /**
     * @return ApiLogQuery The ActiveQuery class for this model
     */
    public static function find() : ApiLogQuery
    {
        return new ApiLogQuery(static::class);
    }


    /**
     * Title used for this model
     */
    public function title() : string
    {
        return $this->api_type;
    }
}
